

//
//	Frontier / UI / Grid
//


/*
 *	Container
 *	--------------------------------------------------
 */

%container {
	width: cols( $breakpoint-columns ) + gutters(2); max-width: 100%; 
	margin-left: auto; margin-right: auto; padding: 0 gutters(0.5); box-sizing: border-box;
	position: relative; z-index: 10;
	@include clearfix;

	&.-narrow { 
		width: cols( $breakpoint-columns/2 ) + $gutter-em; 
	}
}

.container {
	@extend %container;
}


/*
 *	Structure
 *	--------------------------------------------------
 */

	.row {
		margin-bottom: lines(3);
		position: relative;
		@include clearfix;

		//	Layout	 --------------------

		&.-margin-none {
			margin-bottom: 0;
		}
	}
		.col {

			//	Default Column	 ------------

			width: percentage(1); max-width: 100%;
			padding: 0 gutters(0.5); margin-bottom: lines(3);
			float: left;
			box-sizing: border-box;

			.-cols-fixed & {
				width: cols(3);
				box-sizing: content-box;
			}

			//	Column Sizes	 ------------
			
			&.-single,
			&.-small {
				width: percentage( 1/$breakpoint-columns );
				.-cols-fixed & { width: cols(1); }
			}

			&.-mobile-third {
				width: percentage( 1/3 );
			}

			&.-mobile-half {
				width: percentage( 1/2 );
			}

			&.-mobile-full {
				width: percentage( 1 );
			}

			//	Positions	 ----------------

			&.-right {
				float: right;
			}
			&.-left {
				float: left;
			}
			&.-center {
				margin: 0 auto;
				float: none;
			}
			
			//	Layout	 --------------------

			&.-margin-none {
				margin-bottom: 0;
			}

			//	Modifiers	 ----------------

			&.-flush {
				padding: 0 em(1) em(1) 0;
			}
			&.-flex {
				display: flex;
				flex-direction: column;
				flex-wrap: wrap;

				.col {
					float: none;
				}
			}

			//	Nested Styles	 ------------

			.row {
				margin-left: gutters(-0.5); margin-right: gutters(-0.5);

				&.-margin-none {
					margin-bottom: 0;
				}

				&:last-child {
					margin-bottom: 0;
				}
			}

			//	States	 --------------------

		}



/*
 * 	Media Queries
 *	--------------------------------------------------
 */

/*
 *	Breakpoint:	smartphone
 *	--------------------------------------------------
 */

@include breakpoint( smartphone ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns ) + $gutter-em; }
	}

	.col {

		//	Column Sizes	 ------------
		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
		
	}
}


/*
 *	Breakpoint:	smartphone-wide
 *	--------------------------------------------------
 */

@include breakpoint( smartphone-wide ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns ) + $gutter-em; }
	}
	
	.col {

		//	Default Column	 ------------
		width: percentage( 1 ); max-width: 100%;

		//	Column Sizes	 ------------
		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
	}

}


/*
 *	Breakpoint:	tablet
 *	--------------------------------------------------
 */

@include breakpoint( tablet ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-half { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
	}

	.row {
		margin-bottom: lines(3);
	}

		.col {
			width: percentage( 1/4 );

			&.-mobile-half {
				width: percentage( 1/4 );
			}
			
			&.-single {
				width: percentage( 1/$breakpoint-columns );
				.-cols-fixed & { width: cols(1); }
			}
			&.-small {
				width: percentage( 1/6 );
				.-cols-fixed & { width: cols(2); }
			}
			&.-third {
				width: percentage( 1/3 );
				.-cols-fixed & { width: cols(4); }
			}
			&.-fivetwelfths {
				width: percentage( 5/12 );
				.-cols-fixed & { width: cols(5); }
			}
			&.-half {
				width: percentage( 1/2 );
				.-cols-fixed & { width: cols(6); }
			}
			&.-seventwelfths {
				width: percentage( 7/12 );
				.-cols-fixed & { width: cols(7); }
			}
			&.-twothirds {
				width: percentage( 2/3 );
				.-cols-fixed & { width: cols(8); }
			}
			&.-wide {
				width: percentage( 3/4 );
				.-cols-fixed & { width: cols(9); }
			}
			&.-full {
				width: percentage( 1 );
				.-cols-fixed & { width: cols( $breakpoint-columns ); }
			}
		}

}


/*
 *	Breakpoint:	tablet-wide
 *	--------------------------------------------------
 */

@include breakpoint( tablet-wide ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
	}

	.col {
		width: percentage( 1/4 );

		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			width: percentage( 1 );
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
		
	// 	&.-half-tablet {
	// 		width: percentage( 1/2 );
	// 	}
	// 	&.-wide-tablet {
	// 		width: percentage( 3/4 );
	// 	}
	// 	&.-full-tablet {
	// 		width: percentage( 1 );
	// 	}

	}
}

/*
 *	Breakpoint:	desktop
 *	--------------------------------------------------
 */

@include breakpoint( desktop ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
	}

	.col {

		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			width: percentage( 1 );
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
	}
}

/*
 *	Breakpoint:	med-desktop
 *	--------------------------------------------------
 */

@include breakpoint( med-desktop ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
	}

	.col {

		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			width: percentage( 1 );
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
	}
}


/*
 *	Breakpoint:	large-desktop
 *	--------------------------------------------------
 */

@include breakpoint( large-desktop ) {

	%container {
		width: cols( $breakpoint-columns ) + gutters(2);
		&.-narrow { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
	}

	.col {

		&.-single {
			width: percentage( 1/$breakpoint-columns );
			.-cols-fixed & { width: cols(1); }
		}
		&.-full {
			width: percentage( 1 );
			.-cols-fixed & { width: cols( $breakpoint-columns ); }
		}
	}
}