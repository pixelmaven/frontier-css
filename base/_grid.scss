

//
//	Frontier / UI / Grid
//


/*
 *	Container
 *	--------------------------------------------------
 */

%container {
	width: cols( $breakpoint-columns ) + gutters(1); max-width: 100%; 
	margin-left: auto; margin-right: auto; padding: 0 gutters(0.5); box-sizing: border-box;
	position: relative; z-index: 10;
	@include clearfix;

	&.-span-half { 
		width: cols( $breakpoint-columns/2 ) + gutters(1); 
	}
	&.-span-narrow { 
		width: cols( $breakpoint-columns - 2 ) + gutters(1); 
	}
	&.-span-wide {
		width: percentage( 0.8 );
	}
	&.-span-full {
		width: percentage( 1 );
	}
	&.-span-article {
		width: cols( 7 ) + gutters(2); 
	}
}

.container {
	@extend %container;
}


/*
 *	Structure
 *	--------------------------------------------------
 */

	.row {
		position: relative;
		display: flex; flex-flow: row wrap;

		//	Layout	 --------------------

		&.-margin-none {
			margin-bottom: 0;
		}

		&.-pos-center {
			justify-content: center;
		}

		&.-masonry {
			max-height: 50vh;
			flex-flow: column wrap;
		}
	}
		.col {

			//	Default Column	 ------------

			width: percentage(1/4); max-width: 100%;
			padding: 0 gutters(0.5);
			flex: 1 1 0%;
			box-sizing: border-box;

			//	Column Sizes	 ------------
		
			&[class*="-span-"] {
				flex: 0 0 auto;
			}

			&.-span-single {
				width: percentage( 1/$breakpoint-columns );
			}
			&.-span-small {
				width: percentage( 2/$breakpoint-columns );
				// .-cols-fixed & { width: cols(1); }
			}
			
			
			&.-span-third {
				width: percentage( 1/3 );
			}
			&.-span-quarter {
				width: percentage( 1/4 );
			}
			&.-span-half {
				width: percentage( 1/2 );
			}
			&.-span-twothirds {
				width: percentage( 2/3 );
			}
			&.-span-wide {
				width: percentage( 3/4 );
			}
			&.-span-full {
				width: percentage( 1 );
			}

			// &.-offset-1 {
			// 	margin-left: cols-fluid(1);
			// }


			&.-max-third { max-width: cols( $breakpoint-columns/3 ); }
			&.-max-half { max-width: cols( $breakpoint-columns/2 ); }
			&.-max-twothirds { max-width: cols( ($breakpoint-columns/3)*2 ); }
			&.-max-wide { max-width: cols( ($breakpoint-columns/4)*3 ); }
			&.-max-full { max-width: cols( $breakpoint-columns ); }

			//	Positions	 ----------------

			&.-pos-right {
				margin-left: auto;
			}
			&.-pos-left {
				
			}
			&.-pos-center {
				justify-content: center;
			}
			
			//	Layout	 --------------------

			&.-margin-none {
				margin-bottom: 0;
			}

			//	Modifiers	 ----------------

			&.-flush {
				padding: 0 em(1) em(1) 0;
			}

			//	Nested Styles	 ------------

			.row {
				margin-left: gutters(-0.5); margin-right: gutters(-0.5);
			}

			//	States	 --------------------

		}



/**
 * 	Media Queries
 *	--------------------------------------------------
 */

@each $bp, $bp-map in $breakpoints {

	@if $bp != 'default' {
		@include breakpoint( #{$bp} ) {

			%container {
				width: cols( $breakpoint-columns ) + gutters(1);
				&.-span-narrow { width: cols( $breakpoint-columns - 2 ) + $gutter-em; }
				&.-span-half { width: cols( $breakpoint-columns/2 ) + $gutter-em; }
				// &.-span-article { width: cols( $breakpoint-columns - 2 ) + ($gutter-em * 2); }
			}

		}
	}

}

/** Breakpoint:	Large ----------------------- */

@include breakpoint( large ) {
	
	.col {
		&.-offset-1 { margin-left: cols-fluid(1); }
	// 	&.-max-third { max-width: cols( $breakpoint-columns/3 ); }
	// 	&.-max-half { max-width: cols( $breakpoint-columns/2 ); }
	}
}


/** Breakpoint:	Small ----------------------- */

@include breakpoint( small ) {

	%container {
		
		&.-span-article {
			width: cols( $breakpoint-columns ) + gutters(1); 
		}

		&.-span-max-onsmall {
			width: 100%;
			padding: 0;

			.col {
				padding: 0;
			}
		}
	}

	.col {
		// width: percentage(1);
		// flex: 1 1 100%;

		&.-offset-1 { margin-left: 0 }
	}
}